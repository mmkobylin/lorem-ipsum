{"version":3,"sources":["data.js","component/Form.js","component/Article.js","component/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Form","useState","count","setCount","text","setText","words","setWords","className","onSubmit","e","preventDefault","data","length","concat","slice","info","map","value","index","trim","split","randomise","lastChar","i","foodRandom","random","Math","floor","charAt","toUpperCase","join","htmlFor","name","id","type","min","onChange","target","disabled","style","cursor","Component","Header","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAAe,GACX,gcACA,80BACA,kRACA,ohBACA,ghB,OC2HWA,EA5HF,WAEX,MAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAGA,EAA0BF,mBAAS,IAAnC,mBAAQG,EAAR,KAAcC,EAAd,KAEA,EAA4BJ,mBAAS,IAArC,mBAAQK,EAAR,KAAeC,EAAf,KAgFE,OACE,qCACA,yCAAaD,KACb,sCAAUF,EAAV,OACE,yBAASI,UAAU,iBAAnB,SACI,uBAEAC,SApFS,SAACC,GAKlB,GAHAA,EAAEC,iBAGEC,EAAKC,OAASX,EAEhBG,EAASO,EAAKE,OAAOF,GAAOG,MAAM,EAAGb,QAChC,CACL,IAAMc,EAASJ,EAAKG,MAAO,EAAGb,GAAQe,KAAK,SAACC,EAAOC,GAKjD,IAFA,IAAMb,EAAQY,EAAME,OAAOC,MAAM,KAH0B,aAOzD,SAASC,IAEP,IAAIC,EAAWjB,EAAMkB,GAAGlB,EAAMkB,GAAGX,OAAS,GAEtCY,EAAa,CAAC,SAAU,aAAc,OAAQ,QAAS,SAAW,OAAQ,UAAW,UAAW,QAAS,UAAW,WAAY,SAAU,QAAS,SAAU,aAG7JC,EAASD,EAAWE,KAAKC,MAAMD,KAAKD,SAASD,EAAWZ,SAK1DP,EAAMkB,GAFQ,KAAZD,EAESG,EAAS,IAEA,KAAZH,EACGG,EAAS,IAGTA,EAoBXC,KAAKD,SAAW,IAClBJ,IAPIhB,EAAMkB,GAAGT,MAAM,EAAE,IAAMT,EAAMkB,EAAI,GAAGT,MAAM,EAAE,IAC9CO,IATyC,KAAvChB,EAAMkB,EAAI,GAAGlB,EAAMkB,EAAE,GAAGX,OAAS,KAEnCP,EAAMkB,GAAKlB,EAAMkB,GAAGK,OAAO,GAAGC,cAAgBxB,EAAMkB,GAAGT,MAAM,IAoBnER,EAASe,MAhDCE,EAAI,EAAGA,EAAIL,EAAOK,IAAO,IAmDrC,OAAOlB,EAAMyB,KAAM,QAGnB1B,EAAQW,KAcF,UAIF,uBAAOgB,QAAQ,SAAf,yBACA,uBACAC,KAAK,SAASC,GAAG,SAASC,KAAK,SAASC,IAAM,IAG9CC,SAlBW,SAAC3B,GAClBP,EAAUO,EAAE4B,OAAOpB,UAoBb,uBACA,wBAEEqB,UAAcrC,EAEdsC,MAAWtC,EAAoC,CAAEuC,OAAQ,WAAtC,CAAEA,OAAQ,eAC7BN,KAAM,SAEN3B,UAAU,MAPZ,wBAYJ,yBAASA,UAAU,aAAnB,SACIF,GAAgB,WCrHGoC,YCMdC,MATR,WACH,OACI,8BACI,8DCkBGC,MAbf,WAGE,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,QCJSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.072c5c3e.chunk.js","sourcesContent":["export default [\r\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\r\n    \"Sed ultrices sapien massa, non faucibus lectus commodo at. Nulla et aliquam nisi. Pellentesque aliquam sed lacus vel egestas. Curabitur ipsum elit, interdum vitae dolor viverra, vulputate dapibus massa. Donec congue massa nec ex tristique, quis elementum ipsum molestie. Integer at massa massa. Aenean convallis aliquet fermentum. Pellentesque mattis, neque vitae bibendum mollis, nisi augue rutrum ligula, in egestas erat purus et nisi. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Donec commodo purus at tellus hendrerit, a posuere lectus accumsan. Mauris vitae mauris at ipsum aliquam elementum ut ac tortor. Aenean purus dolor, lobortis sed lectus nec, imperdiet placerat ipsum. Vivamus nec lorem et eros scelerisque congue nec non nisi. Donec sollicitudin suscipit nunc, a fringilla lorem.\",\r\n    \"Cras a posuere lacus. Praesent in pharetra nunc, vel lobortis dolor. Nulla at felis diam. Praesent lacinia mauris vitae tincidunt blandit. Interdum et malesuada fames ac ante ipsum primis in faucibus. Donec ac cursus metus, id euismod erat. Sed facilisis commodo posuere.\",\r\n    \"Cras ultrices molestie lorem quis finibus. Cras purus dolor, porta non ultricies id, feugiat nec velit. Duis nec dolor sem. Donec volutpat a massa in congue. Fusce euismod libero nec libero imperdiet placerat. Mauris consectetur tortor vehicula leo ultricies, vel vestibulum metus eleifend. Fusce sed efficitur nisi. Mauris aliquam sem non egestas condimentum. Cras lectus arcu, consequat vel eros sit amet, pellentesque tempus est. Nullam imperdiet feugiat ligula pharetra volutpat. Nullam sollicitudin vitae risus at imperdiet.\",\r\n    \"Donec vestibulum viverra purus in ornare. Ut suscipit et nisl eu posuere. Donec vitae justo a sapien vulputate facilisis sed vel nisi. Donec pharetra porta odio, at commodo diam tempor ac. Donec ac convallis ex. Nullam et mattis risus. Mauris dui magna, dignissim sed ipsum et, lacinia facilisis lorem. Duis viverra faucibus tempor. Maecenas massa magna, iaculis euismod sem ut, consectetur malesuada orci. Fusce diam justo, viverra non posuere ut, hendrerit vel magna. Pellentesque vel augue sit amet libero maximus mollis.\"\r\n]","import React, { useState } from 'react'\r\nimport data from '../data';\r\n\r\n// const declared\r\nconst Form = () => { \r\n\r\n  const [count, setCount] = useState(0);\r\n\r\n  // empty array\r\n  const [ text, setText ] = useState([])\r\n\r\n  const [ words, setWords ] = useState([])\r\n\r\n\r\n  let handleSubmit = (e) => {\r\n    // stops the reloading of the webpage\r\n    e.preventDefault();\r\n    \r\n    // this part defines the amount of paragraphs.\r\n    if (data.length < count ) { \r\n      // how many times we need the data???\r\n      setText((data.concat(data)).slice(0, count));\r\n    } else {\r\n      const info = ((data.slice( 0, count)).map( (value, index) => {\r\n\r\n        // makes it words\r\n        const words = value.trim().split(\" \");\r\n\r\n        for ( var i = 3; i < index; i++ ) {\r\n\r\n          function randomise() {\r\n            // checking each item in words array except last one,\r\n            var lastChar = words[i][words[i].length - 1];\r\n    \r\n            var foodRandom = ['chilli', 'cheesecake', 'chai', 'latte', 'sorbet',  'wrap', 'falafel', 'hallumi', 'tapas', 'samosas', 'couscous', 'pakora', 'spicy', 'hummus', 'cheakpeas'];\r\n    \r\n            // randomising variable\r\n            var random = foodRandom[Math.floor(Math.random()*foodRandom.length)];\r\n    \r\n            // sorting punctuation\r\n            if (lastChar == ',' ) {\r\n              // items in array randomiezed and floored\r\n              words[i] = random + ',' ;\r\n            }\r\n            else if  (lastChar == '.' ) {\r\n              words[i] = random + '.';\r\n            }\r\n            else {\r\n              words[i] = random;\r\n            }\r\n          }\r\n    \r\n          // sorting capitals\r\n          function capitals() {\r\n            if (words[i - 1][words[i-1].length - 1] == '.' ) {\r\n              // capitalize first letter //slice first letter of the word and add rest\r\n              words[i] = words[i].charAt(0).toUpperCase() + words[i].slice(1);\r\n            }\r\n          }\r\n      \r\n          function duplication() {\r\n          // using slice as it has to ignore dots and capitals.\r\n            if (words[i].slice(1,3) == words[i - 1].slice(1,3) ) {\r\n              randomise();\r\n            }\r\n          }        \r\n    \r\n          // check for each word;\r\n          if (Math.random() < 0.5 ) {\r\n            randomise();\r\n          }\r\n    \r\n        // check for duplicates, then changes to capitals;\r\n        duplication()\r\n        capitals()\r\n\r\n        setWords(randomise(info))\r\n\r\n      }     \r\n      return words.join( ' ' ) } ) );\r\n\r\n    \r\n      setText(info)\r\n\r\n    }\r\n  }\r\n\r\n  let handleChange = (e) => {\r\n    setCount( e.target.value);\r\n  }\r\n\r\n    return (\r\n      <>\r\n      <p> Words: { words }</p>\r\n      <p>Text:{ text } </p>\r\n        <section className=\"section-center\">\r\n            <form\r\n            // making sure that the submitting form is an option\r\n            onSubmit = { handleSubmit }\r\n            >\r\n          <label htmlFor=\"amount\">Paragraphs?</label>\r\n          <input \r\n          name=\"amount\" id=\"amount\" type=\"number\" min = \"1\"\r\n          // input controlled - by setCount changing count to e.target.value\r\n          //e sets event \r\n          onChange = { handleChange }\r\n          \r\n          ></input>\r\n          <br></br>\r\n          <button \r\n            // \r\n            disabled = { !count }  \r\n            // changing the button cursor depending if the count is empty\r\n            style = { !count ? { cursor: 'not-allowed' } : { cursor: 'pointer'} }\r\n            type =\"submit\"\r\n\r\n            className=\"btn\"\r\n          >Lorem\r\n          </button>\r\n        </form>\r\n      </section>\r\n      <article className=\"lorem-text\">\r\n        { words ? words : null }\r\n    </article>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import React, { Component } from 'react';\r\nimport Form from './Form.js'; \r\nimport data from '../data';\r\n\r\n\r\nexport class Article extends Component {\r\n    render() {\r\n        return (\r\n            \r\n            <article className=\"lorem-text\">\r\n                {/* { text ? 'no text' : text } */}\r\n            </article>\r\n        \r\n        )\r\n    }\r\n}\r\n\r\nexport default Article\r\n","import React from 'react'\r\n\r\nexport function Header() {\r\n    return (\r\n        <div>\r\n            <h3>Hipster food lorem ipsum.</h3>    \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Header\r\n","import './App.css';\r\nimport React from 'react';\r\nimport Article from './component/Article';\r\nimport Form from './component/Form';\r\nimport Header from './component/Header';\r\n\r\n// import Map_component from './Map_component';\r\n// passing data from another \r\nimport data from './data';\r\n\r\nfunction App() {\r\n\r\n  // paragraph amount set up as 0.\r\n  return (\r\n    <>      \r\n      <Header/>\r\n      <Form/>\r\n      {/* <Article/> */}\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}